/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/register/auth': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * Authenticate one login details against pre populated bookers
     * @description Authenticate one login details against pre populated bookers and return BookerReference object to be used for all other api calls for booker information
     */
    put: operations['bookerAuthorisation']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/config': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * Create bookers details
     * @description Create bookers details
     */
    put: operations['create']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/config/{bookerReference}/prisoner': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * Create booker prisoner details
     * @description Create booker prisoner details
     */
    put: operations['createBookerPrisoner']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/config/{bookerReference}/prisoner/{prisonerId}/visitor': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * Create booker prisoner visitor details
     * @description Create booker prisoner visitor details
     */
    put: operations['createBookerPrisonerVisitor']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/config/{bookerReference}/prisoner/{prisonerId}/visitor/{visitorId}/deactivate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * deactivate booker prisoner visitor
     * @description deactivate booker prisoner visitor
     */
    put: operations['deactivateBookerPrisonerVisitor']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/config/{bookerReference}/prisoner/{prisonerId}/visitor/{visitorId}/activate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * activate booker prisoner visitor
     * @description activate booker prisoner visitor
     */
    put: operations['activateBookerPrisonerVisitor']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/config/{bookerReference}/prisoner/{prisonerId}/deactivate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * deactivate booker prisoner
     * @description deactivate booker prisoners
     */
    put: operations['deactivateBookerPrisoner']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/config/{bookerReference}/prisoner/{prisonerId}/activate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * activate booker prisoner
     * @description activate booker prisoner
     */
    put: operations['activateBookerPrisoner']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/{bookerReference}/permitted/prisoners': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get permitted prisoners associated with a booker.
     * @description Get permitted prisoners associated with a booker.
     */
    get: operations['getPermittedPrisonersForBooker']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/{bookerReference}/permitted/prisoners/{prisonerId}/permitted/visitors': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get permitted visitors for a permitted prisoner associated with that booker.
     * @description Get permitted visitors for a permitted prisoner associated with that booker.
     */
    get: operations['getPermittedVisitorsForPrisoner']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/config/email/{emailAddress}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * get booker by email
     * @description get booker by email
     */
    get: operations['getBookerByEmail']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/public/booker/config/{bookerReference}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /**
     * Clear bookers details
     * @description Clear bookers details, keeps booker reference and email
     */
    delete: operations['clearBookerDetails']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    ErrorResponseDto: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    /** @description Auth detail Dto */
    AuthDetailDto: {
      /** @description auth reference/sub */
      oneLoginSub: string
      /** @description auth email */
      email: string
      /** @description auth phone number */
      phoneNumber?: string
    }
    /** @description Booker reference Object, to be used with all other api call for booker information */
    BookerReference: {
      /** @description This value is the booker reference and should be used to acquire booker information */
      value: string
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    /** @description Create booker with associated permitted prisoner data. */
    CreateBookerDto: {
      /** @description auth email */
      email: string
    }
    /** @description Booker of visits. */
    BookerDto: {
      /** @description This is the booker reference and should be used to acquire booker information */
      reference: string
      /** @description auth reference/sub */
      oneLoginSub: string
      /** @description auth email */
      email: string
      /** @description Permitted prisoners list */
      permittedPrisoners: components['schemas']['PermittedPrisonerDto'][]
    }
    /** @description Permitted prisoner associated with the booker. */
    PermittedPrisonerDto: {
      /**
       * @description prisoner Id
       * @example A1234AA
       */
      prisonerId: string
      /**
       * @description Active / Inactive permitted prisoner
       * @example true
       */
      active: boolean
      /** @description Permitted visitors */
      permittedVisitors: components['schemas']['PermittedVisitorDto'][]
    }
    /** @description Permitted visitor associated with the permitted prisoner. */
    PermittedVisitorDto: {
      /**
       * Format: int64
       * @description Identifier for this contact (Person in NOMIS)
       * @example 5871791
       */
      visitorId: number
      /**
       * @description Active / Inactive permitted visitor
       * @example true
       */
      active: boolean
    }
    /** @description Create permitted prisoner with permitted visitors associated with the booker. */
    CreatePermittedPrisonerDto: {
      /**
       * @description prisoner Id
       * @example A1234AA
       */
      prisonerId: string
      /**
       * @description Active / Inactive permitted prisoner
       * @example true
       */
      active: boolean
    }
    /** @description Create permitted prisoner with permitted visitors associated with the booker. */
    CreatePermittedVisitorDto: {
      /**
       * Format: int64
       * @description Identifier for this contact (Person in NOMIS)
       * @example 5871791
       */
      visitorId: number
      /**
       * @description Active / Inactive permitted visitor
       * @example true
       */
      active: boolean
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  bookerAuthorisation: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AuthDetailDto']
      }
    }
    responses: {
      /** @description One login details matched with pre populated booker */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BookerReference']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateBookerDto']
      }
    }
    responses: {
      /** @description Have created booker correctly */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['BookerDto']
        }
      }
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['BookerDto']
        }
      }
      /** @description Incorrect request to access this endpoint */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  createBookerPrisoner: {
    parameters: {
      query?: never
      header?: never
      path: {
        bookerReference: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreatePermittedPrisonerDto']
      }
    }
    responses: {
      /** @description Have created booker prisoner correctly */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedPrisonerDto']
        }
      }
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedPrisonerDto']
        }
      }
      /** @description Incorrect request to access this endpoint */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description The booker does not exist */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  createBookerPrisonerVisitor: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonerId: string
        bookerReference: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreatePermittedVisitorDto']
      }
    }
    responses: {
      /** @description Have created booker prisoner visitor correctly */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedVisitorDto']
        }
      }
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedVisitorDto']
        }
      }
      /** @description Incorrect request to access this endpoint */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description The booker or the booker prisoner does not exist */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  deactivateBookerPrisonerVisitor: {
    parameters: {
      query?: never
      header?: never
      path: {
        bookerReference: string
        prisonerId: string
        visitorId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Have deactivated booker prisoner visitor */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedVisitorDto']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description visitor not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  activateBookerPrisonerVisitor: {
    parameters: {
      query?: never
      header?: never
      path: {
        bookerReference: string
        prisonerId: string
        visitorId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Have activated booker prisoner visitor */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedVisitorDto']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Visitor not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  deactivateBookerPrisoner: {
    parameters: {
      query?: never
      header?: never
      path: {
        bookerReference: string
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Have deactivated booker prisoner */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedPrisonerDto']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Prisoner not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  activateBookerPrisoner: {
    parameters: {
      query?: never
      header?: never
      path: {
        bookerReference: string
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Have activated booker prisoner */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedPrisonerDto']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Prisoner not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  getPermittedPrisonersForBooker: {
    parameters: {
      query?: {
        /**
         * @description Returns active / inactive permitted prisoners or returns all permitted prisoners if this parameter is not passed.
         * @example true
         */
        active?: boolean
      }
      header?: never
      path: {
        /**
         * @description Booker's unique reference.
         * @example A12345DC
         */
        bookerReference: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Returned permitted prisoners associated with a booker */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedPrisonerDto'][]
        }
      }
      /** @description Incorrect request to get permitted prisoners associated with a booker */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to get permitted prisoners associated with a booker */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getPermittedVisitorsForPrisoner: {
    parameters: {
      query?: {
        /**
         * @description Returns active / inactive permitted visitors for a permitted prisoner or returns all permitted visitors for the permitted prisoner if this parameter is not passed.
         * @example true
         */
        active?: boolean
      }
      header?: never
      path: {
        bookerReference: string
        /**
         * @description prisonerId Id for whom permitted visitors need to be returned.
         * @example A12345DC
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Returned permitted visitors for a permitted prisoner associated with that booker */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PermittedVisitorDto'][]
        }
      }
      /** @description Incorrect request to get permitted visitors for a permitted prisoner associated with that booker */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to get permitted visitors for a permitted prisoner associated with that booker */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getBookerByEmail: {
    parameters: {
      query?: never
      header?: never
      path: {
        emailAddress: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description has got booker by email */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['BookerDto']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description booker not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  clearBookerDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        bookerReference: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Have cleared the booker details */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['BookerDto']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Booker not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
}
