/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/queue-admin/retry-dlq/{dlqName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * @description Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_EVENTS_QUEUE_ADMIN
     */
    put: operations['retryDlq']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/retry-all-dlqs': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['retryAllDlqs']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/purge-queue/{queueName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * @description Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_EVENTS_QUEUE_ADMIN
     */
    put: operations['purgeQueue']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/visits/allocation/prisoner/sync': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to sync ongoing changes to prisoner VO / PVO balances from NOMIS to DPS.
     * @description Takes a set of changes to a prisoners and syncs them onto DPS.
     *
     *     Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_API__NOMIS_API
     */
    post: operations['syncPrisonerVisitOrders']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/visits/allocation/prisoner/migrate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to migrate prisoner VO / PVO balances from NOMIS to DPS.
     * @description Takes a prisoner and 'onboards' them onto DPS, syncing their balance with NOMIS. Also used by NOMIS for Initial IEP Entitlement syncs, not just initial migration
     *
     *     Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_API__NOMIS_API
     */
    post: operations['migratePrisonerVisitOrders']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/visits/allocation/job/start': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to trigger adding prisons enabled for VO allocation to allocations queue.
     * @description Endpoint to trigger adding prisons enabled for VO allocation to allocations queue.
     */
    post: operations['triggerVisitAllocationForActivePrisons']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/admin/prison/{prisonCode}/reset': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to allow an admin to reset all prisoners negative balance to zero in a given prison.
     * @description Takes a prison id and repays all of their prisoners negative balance, leaving positive balance uneffected.
     *
     *     Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_API__ADMIN
     */
    post: operations['resetPrisonersNegativeBalance']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/visits/allocation/prisoner/{prisonerId}/balance': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to get a prisoners current balance.
     * @description Takes a prisoner id and return their current visit order balance.
     *
     *     Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_API__NOMIS_API
     */
    get: operations['getPrisonerBalance']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/visits/allocation/prisoner/{prisonerId}/balance/detailed': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to get a prisoners current balance, detailed version.
     * @description Takes a prisoner id and return their current visit order balance, detailed version.
     *
     *     Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_API__HMPPS_MANAGE_PRISON_VISITS_ORCHESTRATION
     */
    get: operations['getPrisonerDetailedBalance']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/visits/allocation/prisoner/{prisonerId}/adjustments/{adjustmentId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to get adjustment for a prisoner, given their ID and adjustment id (changeLogId).
     * @description Returns a snapshot of prisoners balance (including changes and reason for change).
     *
     *     Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_API__NOMIS_API
     */
    get: operations['getPrisonerAdjustment']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/get-dlq-messages/{dlqName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * @description Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_EVENTS_QUEUE_ADMIN
     */
    get: operations['getDlqMessages']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/admin/prison/{prisonCode}/reset/count': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to get the count of prisoners with a negative balance in a given prison.
     * @description Takes a prison id and returns the count of prisoners with a negative balance.
     *
     *     Requires one of the following roles:
     *     * ROLE_VISIT_ALLOCATION_API__ADMIN
     */
    get: operations['getPrisonNegativePrisonerBalanceCount']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    RetryDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    PurgeQueueResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      errorCode?: string
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    VisitAllocationPrisonerSyncDto: {
      /**
       * @description nomsNumber of the prisoner
       * @example AA123456
       */
      prisonerId: string
      /**
       * Format: int32
       * @description The previous VO balance (can be negative)
       * @example 5
       */
      oldVoBalance?: number
      /**
       * Format: int32
       * @description The change of the VO balance (can be negative)
       * @example 5
       */
      changeToVoBalance?: number
      /**
       * Format: int32
       * @description The previous PVO balance (can be negative)
       * @example 2
       */
      oldPvoBalance?: number
      /**
       * Format: int32
       * @description The change of the PVO balance (can be negative)
       * @example 5
       */
      changeToPvoBalance?: number
      /**
       * Format: date
       * @description The date which the change was made
       * @example 2025-02-28
       */
      createdDate: string
      /**
       * @description The reason for the adjustment
       * @example VO_ISSUE
       * @enum {string}
       */
      adjustmentReasonCode:
        | 'AUTO_EXP'
        | 'CANC'
        | 'DISC'
        | 'GOV'
        | 'IEP'
        | 'PVO_CANCEL'
        | 'PVO_IEP'
        | 'PVO_ISSUE'
        | 'VO_CANCEL'
        | 'VO_ISSUE'
        | 'VO_RECREDIT'
      /**
       * @description The source of the change being made
       * @example SYSTEM or STAFF
       * @enum {string}
       */
      changeLogSource: 'SYSTEM' | 'STAFF'
      /**
       * @description Additional information on the sync reason
       * @example Manually adjusted for phone credit
       */
      comment?: string
    }
    VisitAllocationPrisonerMigrationDto: {
      /**
       * @description nomsNumber of the prisoner
       * @example AA123456
       */
      prisonerId: string
      /**
       * Format: int32
       * @description The current VO balance (can be negative)
       * @example 5
       */
      voBalance: number
      /**
       * Format: int32
       * @description The current PVO balance (can be negative)
       * @example 2
       */
      pvoBalance: number
      /**
       * Format: date
       * @description The date which the last iep allocation was given
       * @example 2025-02-28
       */
      lastVoAllocationDate?: string
    }
    VisitAllocationEventJobDto: {
      /**
       * @description Visit Allocation Job Reference
       * @example aa-bb-cc-dd
       */
      allocationJobReference: string
      /**
       * Format: int32
       * @description Number of active prisons
       * @example 12
       */
      totalActivePrisons: number
    }
    PrisonerBalanceDto: {
      /**
       * @description nomsNumber of the prisoner
       * @example AA123456
       */
      prisonerId: string
      /**
       * Format: int32
       * @description The current VO balance (can be negative)
       * @example 5
       */
      voBalance: number
      /**
       * Format: int32
       * @description The current PVO balance (can be negative)
       * @example 2
       */
      pvoBalance: number
    }
    PrisonerDetailedBalanceDto: {
      /**
       * @description nomsNumber of the prisoner
       * @example AA123456
       */
      prisonerId: string
      /**
       * Format: int32
       * @description The current available VO balance
       * @example 5
       */
      availableVos: number
      /**
       * Format: int32
       * @description The current accumulated VO balance
       * @example 5
       */
      accumulatedVos: number
      /**
       * Format: int32
       * @description The current negative VO balance, denoted as a positive value
       * @example 5
       */
      negativeVos: number
      /**
       * Format: int32
       * @description The current available PVO balance
       * @example 5
       */
      availablePvos: number
      /**
       * Format: int32
       * @description The current negative VO balance, denoted as a positive value
       * @example 5
       */
      negativePvos: number
      /**
       * Format: date
       * @description The date VOs were last allocated to the prisoner
       * @example 2025-01-01
       */
      lastVoAllocatedDate: string
      /**
       * Format: date
       * @description The date PVOs were last allocated to the prisoner
       * @example 2025-01-01
       */
      lastPvoAllocatedDate?: string
    }
    VisitAllocationPrisonerAdjustmentResponseDto: {
      /**
       * @description nomsNumber of the prisoner
       * @example AA123456
       */
      prisonerId: string
      /**
       * Format: int32
       * @description previous VO balance of prisoner (can be negative)
       * @example 2
       */
      voBalance?: number
      /**
       * Format: int32
       * @description change to previous VO balance (can be negative)
       * @example -1
       */
      changeToVoBalance?: number
      /**
       * Format: int32
       * @description previous PVO balance of prisoner (can be negative)
       * @example 1
       */
      pvoBalance?: number
      /**
       * Format: int32
       * @description change to previous PVO balance (can be negative)
       * @example -1
       */
      changeToPvoBalance?: number
      /**
       * @description type of change applied
       * @example SYNC
       * @enum {string}
       */
      changeLogType:
        | 'MIGRATION'
        | 'SYNC'
        | 'PRISONER_REMOVED'
        | 'BATCH_PROCESS'
        | 'ALLOCATION_USED_BY_VISIT'
        | 'ALLOCATION_REFUNDED_BY_VISIT_CANCELLED'
        | 'ALLOCATION_ADDED_AFTER_PRISONER_MERGE'
        | 'PRISONER_BALANCE_RESET'
        | 'ADMIN_RESET_NEGATIVE_BALANCE'
      /**
       * @description user who applied change [If system -> SYSTEM, if user -> username]
       * @example JSMITH
       */
      userId: string
      /**
       * @description source of change applied
       * @example 'STAFF' / 'SYSTEM'
       * @enum {string}
       */
      changeLogSource: 'SYSTEM' | 'STAFF'
      /**
       * Format: date-time
       * @description Timestamp of when change occurred
       */
      changeTimestamp: string
      /**
       * @description additional information of change applied
       * @example Gave prisoner extra VO
       */
      comment?: string
    }
    DlqMessage: {
      body: {
        [key: string]: unknown
      }
      messageId: string
    }
    GetDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      /** Format: int32 */
      messagesReturnedCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    PrisonNegativeBalanceCountDto: {
      /**
       * @description code of the prison
       * @example HEI
       */
      prisonCode: string
      /**
       * Format: int64
       * @description The count of all prisoners with a negative balance for given prison
       * @example 5
       */
      count: number
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  retryDlq: {
    parameters: {
      query?: never
      header?: never
      path: {
        dlqName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['RetryDlqResult']
        }
      }
    }
  }
  retryAllDlqs: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['RetryDlqResult'][]
        }
      }
    }
  }
  purgeQueue: {
    parameters: {
      query?: never
      header?: never
      path: {
        queueName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PurgeQueueResult']
        }
      }
    }
  }
  syncPrisonerVisitOrders: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['VisitAllocationPrisonerSyncDto']
      }
    }
    responses: {
      /** @description Prisoner information has been synced. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint. */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to sync prisoner VO / PVO information. */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migratePrisonerVisitOrders: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['VisitAllocationPrisonerMigrationDto']
      }
    }
    responses: {
      /** @description Prisoner information has been migrated. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint. */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to migrate prisoner VO / PVO information. */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  triggerVisitAllocationForActivePrisons: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Active prisons for VO allocation added to queue. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['VisitAllocationEventJobDto']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to trigger adding active prisons for VO allocation to queue */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  resetPrisonersNegativeBalance: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description prison code
         * @example HEI
         */
        prisonCode: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Prisoners negative balances reset. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint. */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to reset prisoners balances. */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getPrisonerBalance: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description prisonerId
         * @example AA123456
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Prisoner balance returned. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PrisonerBalanceDto']
        }
      }
      /** @description Unauthorized to access this endpoint. */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to get prisoner balance. */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner balance not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getPrisonerDetailedBalance: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description prisonerId
         * @example AA123456
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Prisoner balance returned. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PrisonerDetailedBalanceDto']
        }
      }
      /** @description Unauthorized to access this endpoint. */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to get prisoner balance. */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner balance not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getPrisonerAdjustment: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description prisonerId
         * @example AA123456
         */
        prisonerId: string
        /**
         * @description adjustmentId
         * @example 1234
         */
        adjustmentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Prisoner information returned. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['VisitAllocationPrisonerAdjustmentResponseDto']
        }
      }
      /** @description Unauthorized to access this endpoint. */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to get prisoner VO / PVO information. */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No adjustments found in visit allocation api for given prisoner. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getDlqMessages: {
    parameters: {
      query?: {
        maxMessages?: number
      }
      header?: never
      path: {
        dlqName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['GetDlqResult']
        }
      }
    }
  }
  getPrisonNegativePrisonerBalanceCount: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description prison code
         * @example HEI
         */
        prisonCode: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Count returned. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PrisonNegativeBalanceCountDto']
        }
      }
      /** @description Unauthorized to access this endpoint. */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to get count. */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoners not found for prison. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
