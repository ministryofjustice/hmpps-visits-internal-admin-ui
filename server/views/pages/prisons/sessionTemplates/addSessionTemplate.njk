{% extends "partials/layout.njk" %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{%- from "govuk/components/back-link/macro.njk" import govukBackLink -%}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}


{% set pageHeaderTitle = 'Add session template' %}
{% set pageTitle = applicationName + " - " + pageHeaderTitle %}
{% set activePrimaryNav = "prisons" %}
{% set backLinkHref = "/prisons/" + prison.code + "/session-templates" %}

{% block content %}
  {{ super() }}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

      <h1 class="govuk-heading-l">
        <span class="govuk-caption-l">{{ prison.name }}</span>
        {{ pageHeaderTitle }}
      </h1>

      {# Build incentive group array for checkboxes #}
      {% set incentiveGroupsItems = [] %}
      {% for incentiveGroup in incentiveGroups %}
        {% set incentiveGroupsItems = (incentiveGroupsItems.push({
          value: incentiveGroup.reference,
          text: incentiveGroup.name
        }), incentiveGroupsItems) %}
      {% endfor %}

      {# Build category group array for checkboxes #}
      {% set categoryGroupsItems = [] %}
      {% for categoryGroup in categoryGroups %}
        {% set categoryGroupsItems = (categoryGroupsItems.push({
          value: categoryGroup.reference,
          text: categoryGroup.name
        }), categoryGroupsItems) %}
      {% endfor %}

      {# Build location group array for checkboxes #}
      {% set locationGroupsItems = [] %}
      {% for locationGroup in locationGroups %}
        {% set locationGroupsItems = (locationGroupsItems.push({
          value: locationGroup.reference,
          text: locationGroup.name
        }), locationGroupsItems) %}
      {% endfor %}

      {# Build visitOrder items array for radio buttons #}
      {% set visitOrderItems = [] %}
      {% for visitOrder, description in visitOrderDescriptions %}
        {% if loop.last %}
          {% set visitOrderItems = (visitOrderItems.push({ divider: "or" }), visitOrderItems) %}
        {% endif %}
        {% set visitOrderItems = (visitOrderItems.push({
          value: visitOrder,
          text: description
        }), visitOrderItems)%}
      {% endfor %}

      <form action="/prisons/{{ prison.code }}/session-templates/add" method="POST" novalidate>
        <input type="hidden" name="_csrf" value="{{ csrfToken }}">

        {{ govukInput({
          label: {
            text: "Template name",
            classes: "govuk-label--m"
          },
          classes: "govuk-!-width-three-quarters",
          id: "name",
          name: "name",
          value: formValues.name,
          autocomplete: "off",
          errorMessage: errors | findError('name')
        }) }}

        {%- set dayItems = [{
          text: "Choose day of the week"
        }] -%}
        {% for day in daysOfWeek %}
          {%- set dayItems = (dayItems.push({ text: day | capitalize, value: day }), dayItems) -%}
        {% endfor %}
        {{ govukSelect({
          id: "dayOfWeek",
          name: "dayOfWeek",
          value: formValues.dayOfWeek,
          label: {
            text: "Day of the week",
            classes: "govuk-label--m"

          },
          items: dayItems,
          errorMessage: errors | findError('dayOfWeek')
        }) }}

        {{ govukInput({
          label: {
            text: "Visit start time",
            classes: "govuk-label--m"
          },
          hint: {
            text: "For example, 13:00"
          },
          classes: "govuk-!-width-one-third",
          id: "startTime",
          name: "startTime",
          value: formValues.startTime,
          autocomplete: "off",
          errorMessage: errors | findError('startTime')
        }) }}

        {{ govukInput({
          label: {
            text: "Visit end time",
            classes: "govuk-label--m"
          },
          hint: {
            text: "For example, 13:00"
          },
          classes: "govuk-!-width-one-third",
          id: "endTime",
          name: "endTime",
          value: formValues.endTime,
          autocomplete: "off",
          errorMessage: errors | findError('endTime')
        }) }}

        {{ govukInput({
          label: {
            text: "Weekly frequency",
            classes: "govuk-label--m"
          },
          hint: {
            text: "1 = weekly, 2 = fortnightly, etc"
          },
          classes: "govuk-!-width-one-third",
          id: "weeklyFrequency",
          name: "weeklyFrequency",
          inputmode: "numeric",
          spellcheck: false,
          value: formValues.weeklyFrequency,
          autocomplete: "off",
          errorMessage: errors | findError('weeklyFrequency')
        }) }}

        {{ govukDateInput({
          id: "validFromDate",
          fieldset: {
            legend: {
              text: "Template start date",
              classes: "govuk-fieldset__legend--m"
            }
          },
          hint: {
            text: "For example, 27 3 2023"
          },
          errorMessage: errors | findError('validFromDate'),
          items: [
            {
              label: "Day",
              name: "validFromDateDay",
              classes: "govuk-input--width-2",
              autocomplete: "off",
              value: formValues.validFromDateDay
            },
            {
              label: "Month",
              name: "validFromDateMonth",
              classes: "govuk-input--width-2",
              autocomplete: "off",
              value: formValues.validFromDateMonth
            },
            {
              label: "Year",
              name: "validFromDateYear",
              classes: "govuk-input--width-4",
              autocomplete: "off",
              value: formValues.validFromDateYear
            }
          ]
        }) }}

        {%- set endDateHtml %}
          {{ govukDateInput({
            id: "validToDate",
            fieldset: {
              legend: {
                text: "Template end date",
                classes: "govuk-fieldset__legend--s"
              }
            },
            hint: {
              text: "For example, 27 3 2023"
            },
            items: [
              {
                label: "Day",
                name: "validToDateDay",
                classes: "govuk-input--width-2",
                autocomplete: "off",
                value: formValues.validToDateDay
              },
              {
                label: "Month",
                name: "validToDateMonth",
                classes: "govuk-input--width-2",
                autocomplete: "off",
                value: formValues.validToDateMonth
              },
              {
                label: "Year",
                name: "validToDateYear",
                classes: "govuk-input--width-4",
                autocomplete: "off",
                value: formValues.validToDateYear
              }
            ]
          }) }}
        {% endset -%}
        {{ govukCheckboxes({
          name: "hasEndDate",
          fieldset: {
            legend: {
              text: "Does this session have an end date?",
              classes: "govuk-fieldset__legend--m"
            }
          },
          errorMessage: errors | findError('hasEndDate'),
          items: [
            {
              text: "Yes",
              value: "yes",
              conditional: {
              html: endDateHtml
            },
              checked: formValues.hasEndDate === "yes"
            }
          ]
        }) }}

        {{ govukRadios({
          name: "visitOrderRestriction",
          fieldset: {
            legend: {
              text: "What type of visiting order is used for this session?",
              classes: "govuk-fieldset__legend--m"
            },
            attributes: { "data-test": "visit-order-restriction" }
          },
          items: visitOrderItems,
          value: (formValues.visitOrderRestriction if formValues.visitOrderRestriction else 'VO_PVO'),
          errorMessage: errors | findError('visitOrderRestriction')
        }) }}

        {{ govukInput({
          label: {
            text: "Open capacity",
            classes: "govuk-label--m"
          },
          hint: {
            text: "What is the open capacity?"
          },
          classes: "govuk-!-width-one-third",
          id: "openCapacity",
          name: "openCapacity",
          inputmode: "numeric",
          value: formValues.openCapacity,
          autocomplete: "off",
          errorMessage: errors | findError('openCapacity')
        }) }}

        {{ govukInput({
          label: {
            text: "Closed capacity",
            classes: "govuk-label--m"
          },
          hint: {
            text: "What is the closed capacity?"
          },
          classes: "govuk-!-width-one-third",
          id: "closedCapacity",
          name: "closedCapacity",
          inputmode: "numeric",
          value: formValues.closedCapacity,
          autocomplete: "off",
          errorMessage: errors | findError('closedCapacity')
        }) }}

        {{ govukInput({
          label: {
            text: "Visit room",
            classes: "govuk-label--m"
          },
          hint: {
            text: "What is the visit room name?"
          },
          classes: "govuk-!-width-one-third",
          id: "visitRoom",
          name: "visitRoom",
          value: formValues.visitRoom | default("Visits Hall"),
          autocomplete: "off",
          errorMessage: errors | findError('visitRoom')
        }) }}

        {% include './includes/categoryGroup.njk' %}

        {% include './includes/incentiveGroup.njk' %}

        {% include './includes/locationGroup.njk' %}

        {{ govukCheckboxes({
          name: "hideInPublicServices",
          fieldset: {
            legend: {
              text: "Hide in public services?",
              classes: "govuk-fieldset__legend--m"
            }
          },
          errorMessage: errors | findError('hideInPublicServices'),
          items: [
            {
              text: "Yes",
              value: "yes",
              checked: formValues.hideInPublicServices === 'yes'
            }
          ]
        }) }}

        {{ govukButton({
          text: "Add",
          attributes: { "data-test": "submit" },
          preventDoubleClick: true
        }) }}
      </form>
    </div>
  </div>
{% endblock %}
