{% extends "partials/layout.njk" %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{%- from "govuk/components/tag/macro.njk" import govukTag -%}
{%- from "moj/components/identity-bar/macro.njk" import mojIdentityBar -%}
{% from "components/subNavigation.njk" import subNavigation %}

{% set pageHeaderTitle = prison.name %}
{% set pageTitle = applicationName + " - Session templates - " + pageHeaderTitle %}
{% set activePrimaryNav = "prisons" %}

{% macro groupCountIfNotEmpty(groupArray, label) %}
  {% if groupArray | length %}
    {{ label }} ({{ groupArray | length }})
  {% endif %}
{% endmacro %}


{% block content %}
  {{ super() }}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

      <h1 class="govuk-heading-l">
        <span>{{ pageHeaderTitle }}</span>
      </h1>

      <p>This prison is currently
        {{ govukTag({
          text: "Active" if prison.active else "Inactive",
          classes: "govuk-tag--blue" if prison.active else "govuk-tag--grey",
          attributes: { "data-test": "prison-status" }
        }) }}
      </p>
    </div>
  </div>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

      {{ subNavigation(prison.code, "session-templates") }}

      <h2 class="govuk-heading-m">Session templates</h2>

      {# Build button items for session template range filter #}
      {% set filterMenuItems = [] %}
      {% for rangeKey, description in sessionTemplatesFilterRanges %}
        {% set filterMenuItems = (filterMenuItems.push({
          text: description | capitalize,
          classes: "govuk-button--secondary",
          href: "/prisons/" + prison.code + "/session-templates?rangeType=" + rangeKey
        }), filterMenuItems)%}
      {% endfor %}

      {{ mojIdentityBar({
        title: {
          html: '<span class="govuk-body">Showing '
            + '<strong>' + sessionTemplatesFilterRanges[selectedRange]+ '</strong>'
            + ' session templates</span>'
        },
        classes: 'govuk-!-margin-bottom-7',
        menus: [{
          items: [{
            text: "Add a session template",
            href: "/prisons/" + prison.code + "/session-templates/add",
            attributes: { "data-test": "add-session-template" }
          }]
        }, {
          items: filterMenuItems
        }]
      }) }}

      {# Build rows of session templates with day as a spanned cell #}
      {% set rows = [] %}
      {% for day, sessionTemplates in sessionTemplatesByDay -%}

        {% if sessionTemplates | length %}

          {%- set rows = (rows.push([
            {
              html: '<h3 class="govuk-heading-s govuk-!-margin-bottom-0 govuk-!-margin-top-3">' + day | capitalize + "</h3>",
              colspan: 9
            }
            ]), rows) %}

            {%- for sessionTemplate in sessionTemplates -%}
              {% set sessionActiveHtml %}
                {{ govukTag({
                  text: "Active" if sessionTemplate.active else "Inactive",
                  classes: "govuk-tag--blue" if sessionTemplate.active else "govuk-tag--grey"
                }) }}
              {% endset %}
              {%- set groupsListWithCount = [
                groupCountIfNotEmpty(sessionTemplate.prisonerCategoryGroups, 'Category') | trim,
                groupCountIfNotEmpty(sessionTemplate.prisonerIncentiveLevelGroups, 'Incentive') | trim,
                groupCountIfNotEmpty(sessionTemplate.permittedLocationGroups, 'Location') | trim
              ] | join("\n") | trim -%}

              {%- set rows = (rows.push([
                {
                  html: '<a class="govuk-link--no-visited-state" href="/prisons/' + prison.code + '/session-templates/' + sessionTemplate.reference + '">'
                    + sessionTemplate.name + "</a>",
                  attributes: { "data-test": "template-name" }
                },
                {
                  html: sessionActiveHtml,
                  attributes: { "data-test": "template-status"}
                },
                {
                  text: sessionTemplate.sessionTimeSlot.startTime + " to " + sessionTemplate.sessionTimeSlot.endTime,
                  attributes: { "data-test": "template-start-end-time" }
                },
                {
                  text: sessionTemplate.sessionCapacity.open,
                  classes: "nowrap",
                  attributes: { "data-test": "template-capacity-open" }
                },
                {
                  text: sessionTemplate.sessionCapacity.closed,
                  classes: "nowrap",
                  attributes: { "data-test": "template-capacity-closed" }
                },
                {
                  text: sessionTemplate.sessionDateRange.validFromDate | formatDate('dd MMM yyyy'),
                  classes: "nowrap",
                  attributes: { "data-test": "template-valid-from-date" }
                },
                {
                  text: sessionTemplate.sessionDateRange.validToDate | formatDate('dd MMM yyyy')
                    if sessionTemplate.sessionDateRange.validToDate else "No end date",
                  classes: "nowrap",
                  attributes: { "data-test": "template-valid-to-date" }
                },
                {
                  text: sessionTemplate.weeklyFrequency + " week" | pluralise(sessionTemplate.weeklyFrequency),
                  attributes: { "data-test": "template-weekly-frequency" }
                },
                {
                  html: groupsListWithCount | nl2br if groupsListWithCount else "None",
                  classes: "nowrap",
                  attributes: { "data-test": "template-groups" }
                }
                ]), rows) %}
            {%- endfor %}
        {% endif %}
      {%- endfor %}

      {% if rows | length %}
        {{ govukTable({
          head: [
            {
              text: "Name"
            },
            {
              text: "Status"
            },
            {
              text: "Time"
            },
            {
              text: "Open"
            },
            {
              text: "Closed"
            },
            {
              text: "Valid from"
            },
            {
              text: "Valid to"
            },
            {
              text: "Frequency"
            },
            {
              text: "Groups"
            }
          ],
          rows: rows
        }) }}
      {% else %}
        <p>There are no session templates for this prison matching the selected filter.</p>
      {% endif %}
        
    </div>
  </div>
{% endblock %}

{% block pageScripts %}
  <script nonce="{{ cspNonce }}">
    new MOJFrontend.ButtonMenu({
      container: $(".moj-identity-bar .moj-button-menu:last"),
      mq: "(min-width: 1000em)",
      buttonText: "Filter templates",
      buttonClasses:
        "govuk-button--secondary moj-button-menu__toggle-button--secondary",
      menuClasses: "moj-button-menu__wrapper--right",
    });
  </script>
{% endblock %}
