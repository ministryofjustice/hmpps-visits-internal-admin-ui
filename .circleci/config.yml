main_branch: &main_branch
  filters:
    branches:
      only: main
feature_branch: &feature_branch
  filters:
    branches:
      ignore: main

version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@10
  slack: circleci/slack@4

parameters:
  alerts-slack-channel:
    type: string
    default: visits-alerts

  releases-slack-channel:
    type: string
    default: visits-releases

  node-version:
    type: string
    default: 22.15-browsers

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          command: |
            npm run build
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build
            - dist
            - assets/stylesheets

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test:ci
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html

  integration_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.9.2/wiremock-standalone-3.9.2.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - hmpps/wait_till_ready:
          # Wait for wiremock to start
          port: 9091
      - run:
          name: Run the node app.
          command: npm run start-feature
          background: true
      - hmpps/wait_till_ready:
          # Wait for node app to start
          port: 3007
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration_tests/videos
      - store_artifacts:
          path: integration_tests/screenshots

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker

      - request-dev-preview-approval:
          <<: *feature_branch
          type: approval
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker

      - hmpps/deploy_env:
          <<: *feature_branch
          name: deploy_dev_preview
          env: "dev"
          jira_update: true
          context:
            - hmpps-common-vars
          requires:
            - request-dev-preview-approval

      - request-staging-preview-approval:
          <<: *feature_branch
          type: approval
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker

      - hmpps/deploy_env:
          name: deploy_staging_preview
          env: "staging"
          jira_update: true
          jira_env_type: staging
          context:
            - hmpps-common-vars
            - hmpps-visits-internal-admin-ui-stage
          requires:
            - request-staging-preview-approval

      - hmpps/deploy_env:
          <<: *main_branch
          name: deploy_dev
          env: "dev"
          jira_update: true
          context:
            - hmpps-common-vars
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker

      - hmpps/deploy_env:
          <<: *main_branch
          name: deploy_staging
          env: "staging"
          jira_update: true
          jira_env_type: staging
          context:
            - hmpps-common-vars
            - hmpps-visits-internal-admin-ui-stage
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker

      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
            - deploy_staging

      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          context:
            - hmpps-common-vars
            - hmpps-visits-internal-admin-ui-preprod
          requires:
            - request-preprod-approval

      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-visits-internal-admin-ui-prod
          requires:
            - request-prod-approval
